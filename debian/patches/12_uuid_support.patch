#! /bin/sh /usr/share/dpatch/dpatch-run
## 12_uuid_support.dpatch by Michael Prokop <prokop@grml-forensic.org>
##
## DP: This patch enables support for verifying the ISO through bootid=.... bootoption.
## DP: Logic behind bootoptions and possible combinations:
## DP: * bootid.txt + wrong bootid=...                    => fails to boot
## DP: * bootid.txt + right bootid=...                    => boots
## DP: * bootid.txt + ignore_bootid                       => boots
## DP: * bootid.txt + no bootid=... + no ignore_bootid    => fails to boot
## DP: * no bootid.txt + no bootid=... + no ignore_bootid => boots
## DP: * no bootid.txt + bootid=...                       => fails to boot
## DP: * no bootid.txt + ignore_bootid=...                => boots

@DPATCH@
--- a/scripts/boot/9990-misc-helpers.sh
+++ b/scripts/boot/9990-misc-helpers.sh
@@ -52,6 +52,42 @@
 	return 1
 }
 
+grml_match_bootid()
+{
+	path="$1"
+
+	if [ -n "$IGNORE_BOOTID" ] ; then
+		echo " * Ignoring verification of bootid.txt as requested via ignore_bootid.">>/live-boot.log
+		return 0
+	fi
+
+	if [ -n "$BOOTID" ] && ! [ -r "${path}/conf/bootid.txt" ] ; then
+		echo "  * Warning: bootid=... specified but no bootid.txt found on currently requested device.">>/live-boot.log
+		return 1
+	fi
+
+	[ -r "${path}/conf/bootid.txt" ] || return 0
+
+	bootid_conf=$(cat "${path}/conf/bootid.txt")
+
+	if [ -z "$BOOTID" -a -z "$IGNORE_BOOTID" ]
+	then
+		echo " * Warning: bootid.txt found but ignore_bootid / bootid=.. bootoption missing...">>/live-boot.log
+		return 1
+	fi
+
+	if [ "$BOOTID" = "$bootid_conf" ]
+	then
+		echo " * Successfully verified /conf/bootid.txt from ISO, continuing... ">>/live-boot.log
+	else
+		echo " * Warning: BOOTID of ISO does not match. Retrying and continuing search...">>/live-boot.log
+		return 1
+	fi
+
+	return 0
+}
+
+
 matches_uuid ()
 {
 	if [ "${IGNORE_UUID}" ] || [ ! -e /conf/uuid.conf ]
@@ -1350,7 +1386,7 @@
 		fi
 
 		if is_live_path ${mountpoint} && \
-			([ "${skip_uuid_check}" ] || matches_uuid ${mountpoint})
+			([ "${skip_uuid_check}" ] || grml_match_bootid ${mountpoint})
 		then
 			echo ${mountpoint}
 			return 0
@@ -1446,19 +1482,6 @@
 					return 0
 				fi
 			done
-		elif [ "${fstype}" = "squashfs" -o \
-			"${fstype}" = "btrfs" -o \
-			"${fstype}" = "ext2" -o \
-			"${fstype}" = "ext3" -o \
-			"${fstype}" = "ext4" -o \
-			"${fstype}" = "jffs2" ]
-		then
-			# This is an ugly hack situation, the block device has
-			# an image directly on it.  It's hopefully
-			# live-boot, so take it and run with it.
-			ln -s "${devname}" "${devname}.${fstype}"
-			echo "${devname}.${fstype}"
-			return 0
 		fi
 	done
 
--- a/scripts/boot/9990-cmdline-old
+++ b/scripts/boot/9990-cmdline-old
@@ -18,6 +18,11 @@
 				BOOTIF="${x#BOOTIF=}"
 				;;
 
+			bootid=*)
+				BOOTID="${_PARAMETER#bootid=}"
+				export BOOTID
+				;;
+
 			dhcp)
 				# Force dhcp even while netbooting
 				# Use for debugging in case somebody works on fixing dhclient
@@ -79,6 +84,11 @@
 				export FROMISO
 				;;
 
+			ignore_bootid)
+				IGNORE_BOOTID="Yes"
+				export IGNORE_BOOTID
+				;;
+
 			ignore_uuid)
 				IGNORE_UUID="true"
 				export IGNORE_UUID
